shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pap = read_csv("C:/Users/henke/Documents/results.csv")
cat = unique(pap$category)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filter(pap,paper == input$paper)%>%
filter(category == cat[1])%>%
select(c("phrase","frequency"))%>%
arrange(desc(frequency))%>%
mutate(phrase=factor(phrase, levels=phrase))
runApp()
filter(pap,paper == input$paper)%>%
filter(category == cat[1])%>%
select(c("phrase","frequency"))%>%
arrange(desc(frequency))%>%
mutate(phrase=factor(phrase, levels=phrase))
runApp()
runApp()
runApp()
runApp()
pap = read_csv("C:/Users/henke/Documents/results.csv")
pap = read_csv("C:/Users/henke/Documents/results.csv")
pacman::p_load(tidyverse, shiny,tsne, ggbiplot, GGally, stream, streamMOA)
sel = pap %>%
filter(category==cat1)
sel = pap %>%
filter(category==cat[1])
View(sel)
sel = pap %>%
filter(category==cat[1])%>%
filter(phrase=="simulate")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
inner_join(a,b,by = paper)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
